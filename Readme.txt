Python神经网络编程/Python神經網絡編程 [Python Neural Network]

資料來源:
https://github.com/ZhiqiangHo/awesome-machine-learning
下载地址：https://box.lenovo.com/l/muUDSf 提取码：6954

GITHUB: https://github.com/jash-git/Book-Python-Neural-Network

第1章 神经网络如何工作
1.1 尺有所短，寸有所长
1.2 一台简单的预测机
1.3 分类器与预测器并无太大差别
1.4 训练简单的分类器
1.5 有时候一个分类器不足以求解问题
1.6 神经元——大自然的计算机器
1.7 在神经网络中追踪信号
1.8 凭心而论，矩阵乘法大有用途
1.9 使用矩阵乘法的三层神经网络示例
1.10 学习来自多个节点的权重
1.11 多个输出节点反向传播误差
1.12 反向传播误差到更多层中
1.13 使用矩阵乘法进行反向传播误差
1.14 我们实际上如何更新权重
1.15 权重更新成功范例
1.16 准备数据
第2章 使用Python进行DIY
2.1 Python
2.2 交互式Python = IPython
2.3 优雅地开始使用Python
2.4 使用Python制作神经网络
2.5 手写数字的数据集MNIST
第3章 趣味盎然
3.1 自己的手写数字
3.2 神经网络大脑内部
3.3 创建新的训练数据：旋转图像
3.4 结语
附录A 微积分简介
A.1 一条平直的线
A.2 一条斜线
A.3 一条曲线
A.4 手绘微积分
A.5 非手绘微积分
A.6 无需绘制图表的微积分
A.7 模式
A.8 函数的函数
附录B 使用树莓派来工作
B.1 安装IPython
B.2 确保各项工作正常进行
B.3 训练和测试神经网络
B.4 树莓派成功了


--------------

第1章 神經網絡如何工作
1.1 尺有所短，寸有所長
1.2 一台簡單的預測機
1.3 分類器與預測器並無太大差別
1.4 訓練簡單的分類器
1.5 有時候一個分類器不足以求解問題
1.6 神經元——大自然的計算機器
1.7 在神經網絡中追踪信號
1.8 憑心而論，矩陣乘法大有用途
1.9 使用矩陣乘法的三層神經網絡示例
1.10 學習來自多個節點的權重
1.11 多個輸出節點反向傳播誤差
1.12 反向傳播誤差到更多層中
1.13 使用矩陣乘法進行反向傳播誤差
1.14 我們實際上如何更新權重
1.15 權重更新成功範例
1.16 準備數據
第2章 使用Python進行DIY
2.1 Python
2.2 交互式Python = IPython
2.3 優雅地開始使用Python
2.4 使用Python製作神經網絡
2.5 手寫數字的數據集MNIST
第3章 趣味盎然
3.1 自己的手寫數字
3.2 神經網絡大腦內部
3.3 創建新的訓練數據：旋轉圖像
3.4 結語
附錄A 微積分簡介
A.1 一條平直的線
A.2 一條斜線
A.3 一條曲線
A.4 手繪微積分
A.5 非手繪微積分
A.6 無需繪製圖表的微積分
A.7 模式
A.8 函數的函數
附錄B 使用樹莓派來工作
B.1 安裝IPython
B.2 確保各項工作正常進行
B.3 訓練和測​​試神經網絡
B.4 樹莓派成功了